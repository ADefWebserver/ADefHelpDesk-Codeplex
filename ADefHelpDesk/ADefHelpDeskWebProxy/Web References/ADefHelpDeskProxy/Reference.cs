//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4200.
// 
#pragma warning disable 1591

namespace ADefHelpDeskWebProxy.ADefHelpDeskProxy {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://ADefHelpDesk.com/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CurrentUpgradeVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpgradeCheckOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::ADefHelpDeskWebProxy.Properties.Settings.Default.ADefHelpDeskWebProxy_ADefHelpDeskProxy_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CurrentUpgradeVersionCompletedEventHandler CurrentUpgradeVersionCompleted;
        
        /// <remarks/>
        public event UpgradeCheckCompletedEventHandler UpgradeCheckCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADefHelpDesk.com/CurrentUpgradeVersion", RequestNamespace="http://ADefHelpDesk.com/", ResponseNamespace="http://ADefHelpDesk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CurrentUpgradeVersion() {
            object[] results = this.Invoke("CurrentUpgradeVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CurrentUpgradeVersionAsync() {
            this.CurrentUpgradeVersionAsync(null);
        }
        
        /// <remarks/>
        public void CurrentUpgradeVersionAsync(object userState) {
            if ((this.CurrentUpgradeVersionOperationCompleted == null)) {
                this.CurrentUpgradeVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrentUpgradeVersionOperationCompleted);
            }
            this.InvokeAsync("CurrentUpgradeVersion", new object[0], this.CurrentUpgradeVersionOperationCompleted, userState);
        }
        
        private void OnCurrentUpgradeVersionOperationCompleted(object arg) {
            if ((this.CurrentUpgradeVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrentUpgradeVersionCompleted(this, new CurrentUpgradeVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ADefHelpDesk.com/UpgradeCheck", RequestNamespace="http://ADefHelpDesk.com/", ResponseNamespace="http://ADefHelpDesk.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UpgradeItems[] UpgradeCheck(string CurrentVersion) {
            object[] results = this.Invoke("UpgradeCheck", new object[] {
                        CurrentVersion});
            return ((UpgradeItems[])(results[0]));
        }
        
        /// <remarks/>
        public void UpgradeCheckAsync(string CurrentVersion) {
            this.UpgradeCheckAsync(CurrentVersion, null);
        }
        
        /// <remarks/>
        public void UpgradeCheckAsync(string CurrentVersion, object userState) {
            if ((this.UpgradeCheckOperationCompleted == null)) {
                this.UpgradeCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpgradeCheckOperationCompleted);
            }
            this.InvokeAsync("UpgradeCheck", new object[] {
                        CurrentVersion}, this.UpgradeCheckOperationCompleted, userState);
        }
        
        private void OnUpgradeCheckOperationCompleted(object arg) {
            if ((this.UpgradeCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpgradeCheckCompleted(this, new UpgradeCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ADefHelpDesk.com/")]
    public partial class UpgradeItems {
        
        private string itemField;
        
        private string itemDescriptionField;
        
        private string itemDetailsField;
        
        private string itemMethodNameField;
        
        /// <remarks/>
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                this.itemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public string ItemDetails {
            get {
                return this.itemDetailsField;
            }
            set {
                this.itemDetailsField = value;
            }
        }
        
        /// <remarks/>
        public string ItemMethodName {
            get {
                return this.itemMethodNameField;
            }
            set {
                this.itemMethodNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CurrentUpgradeVersionCompletedEventHandler(object sender, CurrentUpgradeVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrentUpgradeVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrentUpgradeVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void UpgradeCheckCompletedEventHandler(object sender, UpgradeCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpgradeCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpgradeCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UpgradeItems[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UpgradeItems[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591